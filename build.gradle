plugins {
    id "org.sonarqube" version "2.8" apply false
    id "com.diffplug.gradle.spotless" version "4.4.0"
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'org.sonarqube'

project.version = "1.0-SNAPSHOT"
mainClassName = 'uk.co.ramp.Framework'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {

    annotationProcessor "org.immutables:value:2.8.8"
    implementation 'org.springframework.boot:spring-boot-starter:2.2.7.RELEASE'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-csv:1.8'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.2'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.11.0'
    implementation "org.immutables:value-annotations:2.8.8"
    implementation "org.immutables:gson:2.8.8"
    implementation 'com.github.ScottishCovidResponse:data_pipeline_api:master-SNAPSHOT' // TODO replace master-SNAPSHOT with data_pipeline_api release tag number once >= 0.7.0 is released
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.11.1'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.11.1'
    testAnnotationProcessor "org.immutables:value:2.8.8"
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.7.RELEASE'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'org.assertj:assertj-core:3.16.1'

}

spotless {
    java {
        googleJavaFormat()
    }
}

jacoco {
    toolVersion = '0.8.5'
}
jacocoTestReport{
    reports{
        xml.enabled true
    }
}
sonarqube {
    properties {
        property "sonar.host.url", "http://10.0.1.11:9000"
    }
}

task copyFilesToInstall(type: Copy) {
    from "contacts.csv", "runSettings.json", "isolationPolicies.json"
    into "$buildDir/install/ContactTracing/bin/"
}

tasks.getByName("installDist").finalizedBy(copyFilesToInstall)
tasks.getByName("sonarqube").mustRunAfter("jacocoTestReport")
tasks.getByName("sonarqube").dependsOn(tasks.getByName("jacocoTestReport"))

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}